/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { Cylinder, useGLTF } from '@react-three/drei'
import { useBox } from '@react-three/cannon';

export default function Ground({ position, props }) {

  const { nodes, materials } = useGLTF('/ground.glb')

  var realPose = [position[0], (position[1]), position[2]];


  const [groundBody, groundAPI] = useBox(() => ({
    args: [0.12, 0.06, 0.12],
    position: realPose,
    mass: 0,
    type: 'Static',
  }), useRef(null));

  return (
    <group ref={groundBody}>
      <group {...props} dispose={null} rotation={[Math.PI / 2, 0, 0]} scale={[0.003, 0.003, 0.003]} position={[0, 0, 0]} >
      <mesh geometry={nodes.imagetostl_mesh.geometry} material={materials.mat1} >
        <meshStandardMaterial attach={"material"} color={0x331111} />
      </mesh>
    </group>
    </group >
  )
}

useGLTF.preload('/ground.glb')
